package com.ghosttorrent.ui.res.build.assets;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public abstract class Asset {

    private String packageName, packagePath;
    protected List<Variable> variables;

    public Asset(){
        packageName = "generated";
        packagePath = System.getProperty("user.dir")+"/src/";
        variables = new ArrayList<>();
    }

    public abstract String getName();

    public String getExtend(){
        return null;
    }

    public String getImplements(){
        return null;
    }

    public String getPackage(){
        return packageName;
    }

    private String getPackagePath(){
        return packagePath+getPackage().replaceAll("\\.", "/")+"/"+getName()+".java";
    }

    public void generate(){
        try{
            File file = new File(getPackagePath());
            if(!file.getParentFile().exists()){
                file.getParentFile().mkdirs();
            }

            System.out.println(getPackagePath());
            FileWriter writer = new FileWriter(file);
            writer.write("package "+getPackage()+";\n\n");
            writer.write("/*********************************/\n");
            writer.write("/*   Auto generated by Builder   */\n");
            writer.write("/*********************************/\n");
            writer.write("public class "+getName()+((getExtend() == null) ? "" : " extends "+getExtend())+((getImplements() == null) ? "" : " implements "+getImplements())+" {\n\n");

            for(Variable variable : variables){
                if(variable.getValue() == null){
                    writer.write("    public "+variable.getType()+" "+variable.getKey()+";\n");
                    continue;
                }

                writer.write("    public "+variable.getType()+" "+variable.getKey()+" = "+variable.getValue()+";\n");

                //writer.write("    public "+variables.get(key)+" "+key+" = new "+variables.get(key)+"();\n");
            }

            writer.write("}\n");

            writer.flush();
            writer.close();

        }catch(IOException e){
            e.printStackTrace();
        }
    }

    public class Variable {

        private String key, type;
        private Object value;

        public Variable(String key, Object value, String type){
            this.key = key;
            this.value = value;
            this.type = type;
        }

        public String getKey(){
            return key;
        }

        public Object getValue(){
            return value;
        }

        public String getType(){
            return type;
        }
    }
}
